@using DPMOPS.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if (User.Claims.FirstOrDefault(x => x.Type == "IsAdmin")?.Value != null)
        {
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-page="/Accounts/Index">إدارة الحسابات</a>
            </li>
        }
    var userManager = Context.RequestServices.GetService<UserManager<ApplicationUser>>();
    var user = await userManager.GetUserAsync(User);

    <li class="nav-item">
        <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">مرحبا @user?.FirstName @user?.LastName!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link">تسجيل خروج</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">إنشاء حساب</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">تسجيل الدخول</a>
    </li>
}
</ul>
